#import "ligo-generic-fa2/lib/multi_asset/fa2.mligo" "FA2"

export type t = big_map<FA2.Ledger.token_id, nat>;


const getSupply = ([supply, tokenId] : [t, FA2.Ledger.token_id]) : nat =>
    match (Big_map.find_opt(tokenId, supply), { 
        Some: (a: nat) => a,
        None: () => (failwith(FA2.Errors.undefined_token) as nat)
   })

export const createSupply = ([supply, newTokenId, amount_] : [t, FA2.Ledger.token_id, nat]) : t => {
    return Big_map.add(newTokenId, amount_, supply)
};

export const increaseSupply = ([supply, tokenId,amount_] : [t, FA2.Ledger.token_id, nat]) : t => {
    let curAmount = getSupply(supply, tokenId);
    let newAmount = curAmount + amount_;
    Big_map.update(tokenId, (Some(newAmount)), supply)
};

export const decreaseSupply = ([supply, tokenId, amount_] : [t, FA2.Ledger.token_id, nat]) : t => {
    let curAmount = getSupply(supply, tokenId);
    let newSupply = abs(curAmount - amount_);
    Big_map.update(tokenId, (Some(newSupply)), supply);
};
 